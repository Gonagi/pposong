name: CI/CD

on:
  # pull_request:
  #   branches:
  #     - main
  push:
    branches:
      - feature-CICD
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Create .env file
        run: |
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > Docker/Keys/.env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: Login Docker and save token
        id: docker_login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Save Docker token
        uses: actions/upload-artifact@v4.3.0
        with:
          name: docker-token
          path: ~/.docker/config.json
  build_and_push_server:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download Docker token
        uses: actions/download-artifact@v4.1.1
        with:
          name: docker-token
          path: ~/.docker/
      - name: Build and push server image
        run: |
          cd Docker/server
          docker build -t ${{secrets.DOCKER_REPO}}/server:latest .
          docker push ${{secrets.DOCKER_REPO}}/server:latest
  build_and_push_api_gateway:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download Docker token
        uses: actions/download-artifact@v4.1.1
        with:
          name: docker-token
          path: ~/.docker/
      - name: Build and push api_gateway image
        run: |
          cd Docker/api_gateway
          docker build -t ${{secrets.DOCKER_REPO}}/api_gateway:latest .
          docker push ${{secrets.DOCKER_REPO}}/api_gateway:latest
  Deploy_to_server:
    needs: [build_and_push_server, build_and_push_api_gateway]
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{secrets.AWS_HOST}}
          username: ${{secrets.AWS_USERNAME}}
          key: ${{secrets.AWS_KEY}}
          port: ${{secrets.AWS_PORT}}
          script: |
            sudo rm -rf pposonggil_v2
            git clone https://Gonagi:${{secrets.GONAGI_TOKEN}}@github.com/Gonagi/pposonggil_v2.git
            cd pposonggil_v2
            sudo find . -type f -exec sed -i 's/localhost/gonagi.store/g' {} + 
            cd Docker/Keys
            echo "${{secrets.GONAGI_STORE_PEM}}" >> gonagi.store.pem
            echo "${{secrets.GONAGI_STORE_KEY_PEM}}" >> gonagi.store-key.pem
            jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
            cd ../server
            sudo npm install
            cd ../api_gateway
            sudo npm install
            sudo docker rmi ${{secrets.DOCKER_REPO}}/api_gateway:latest
            sudo docker rmi ${{secrets.DOCKER_REPO}}/server:latest
            sudo docker rmi nginx:1.25
            sudo docker rmi mysql:8
            sudo docker-compose up -d
